#!/bin/sh

main() {
	JWK_FILE="$1"
	gen_asn1
}

rsa_privkey_asn1_genstring() {
	echo "asn1 = SEQUENCE:private_key"
	echo
	echo "[private key]"
	echo "version = INTEGER:0"
	echo
	echo "n = INTEGER:$(json_to_hex 'n')"
	echo "e = INTEGER:$(json_to_hex 'e')"
	echo "d = INTEGER:$(json_to_hex 'd')"
	echo "p = INTEGER:$(json_to_hex 'p')"
	echo "q = INTEGER:$(json_to_hex 'q')"
	echo "exp1 = INTEGER:$(json_to_hex 'dp')"
	echo "exp2 = INTEGER:$(json_to_hex 'dq')"
	echo "coeff = INTEGER:$(json_to_hex 'qi')"
}

json_to_hex() {
	json="$(jq -Mcr ".$1" < "$JWK_FILE")"
	decoded="$(base64url_decode "$json")"
	to_hex "$decoded"
}

base64url_decode() {
	base64_pad "$1" | tr '\-_' '+/' | base64 -d
}

base64_pad() {
	padded="$1"
	until test "$(( ${#padded} % 4 ))" -eq 0; do
		padded="${padded}="
	done
	printf "%s" "$padded"
}

to_hex() {
	hex="$(printf "%s" "$1" | xxd -ps -u | tr -d '\n\r')"
	if test "${#hex}" -gt 0; then
		echo "0x$hex"
	fi
}

# Do not run main if script is sourced
${__SOURCED__+return}

main "$@"
